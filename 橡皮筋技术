#include <glut.h>
int iPointNum=0;//已确定点的数目
int x1=0,x2=0,y1=0,y2=0;//确定的点坐标
int winWidth=400,winHeight=300;//窗口的宽度和高度
void Initial(void){
	glClearColor(1.0f,1.0f,1.0f,1.0f);//设置窗口背景颜色
}

void ChangeSize(int w, int h){
	winWidth=w; winHeight=h;//保存当前窗口的大小
	glViewport(0,0,w,h);//指定窗口显示区域
	glMatrixMode(GL_PROJECTION);//指定设置投影参数
	glLoadIdentity();//调用单位矩阵，去掉以前的投影参数设置
	gluOrtho2D(0.0,winWidth,0.0,winHeight);//设置投影参数
}
void Display(void){
	glClear(GL_COLOR_BUFFER_BIT);//用当前背景色去填充窗口
	glColor3f(1.0f,0.0f,0.0f);//指定当前的绘图颜色
	if(iPointNum>=1){
		glBegin(GL_LINES);//绘制直线段
		glVertex2i(x1,y1);
		glVertex2i(x2,y2);
		glEnd();
	}
	glutSwapBuffers();//交换缓冲区
}

void MousePlot(GLint button,GLint action,GLint xMouse,GLint yMouse){
	if(button==GLUT_LEFT_BUTTON && action==GLUT_DOWN){
		if(iPointNum==0 || iPointNum==2){
			iPointNum=1;
		    x1=xMouse; y1=winHeight-yMouse;//确定直线段的第一个端点
		}
	    else{
	    	iPointNum=2;
	    	x2=xMouse;y2=winHeight-yMouse;//确定直线段的第二个端点
		    glutPostRedisplay();//指定窗口重新绘制
		}
	}
    if(button==GLUT_RIGHT_BUTTON && action==GLUT_DOWN){
	iPointNum=0;
	glutPostRedisplay();
	}
}

void PassiveMouseMove(GLint	xMouse,GLint yMouse){
	if(iPointNum==1){
		x2=xMouse;
		y2=winHeight-yMouse;//将当前鼠标位置指定为直线的未固定端点
		glutPostRedisplay();
	}
}

int main(int argc,char* argv[]){
	glutInit(&argc,argv);
	glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB);//使用双缓冲及RGB模型
	glutInitWindowSize(400,300);//指定窗口的尺寸
	glutInitWindowPosition(100,100);//指定窗口在屏幕上的位置
	glutCreateWindow("橡皮筋技术");
	glutDisplayFunc(Display);
	glutReshapeFunc(ChangeSize);//指定窗口再整形回调函数
	glutMouseFunc(MousePlot);//指定鼠标响应函数
	glutPassiveMotionFunc(PassiveMouseMove);//指定鼠标移动响应函数
	Initial();
	glutMainLoop();//启动主GLUT事件处理循环
	return 0;
}
